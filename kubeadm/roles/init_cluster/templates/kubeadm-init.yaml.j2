apiVersion: kubeadm.k8s.io/v1beta2
bootstrapTokens:
- groups:
  - system:bootstrappers:kubeadm:default-node-token
  token: abcdef.0123456789abcdef
  ttl: 24h0m0s
  usages:
  - signing
  - authentication
kind: InitConfiguration
localAPIEndpoint:
  advertiseAddress: "{{inventory_hostname}}"    # 本机ip
  bindPort: 6443
nodeRegistration:
  criSocket: /var/run/dockershim.sock
  name: "{{ hostname|quote }}"  # 本机hostname
  taints:
  - effect: NoSchedule
    key: node-role.kubernetes.io/master
---
apiServer:
  timeoutForControlPlane: 4m0s
apiVersion: kubeadm.k8s.io/v1beta2
certificatesDir: /etc/kubernetes/pki
clusterName: kubernetes
controllerManager: {}
dns:
  type: CoreDNS
etcd: 
  external:
    endpoints:

      {% for host in groups['etcd'] %} 
      - https://{{hostvars[host]['inventory_hostname']}}:2379
      {% if not loop.last %} {% endif %}{% endfor %}

    caFile: /etc/kubernetes/pki/etcd/ca.pem  #搭建etcd集群时生成的ca证书
    certFile: /etc/kubernetes/pki/etcd/etcd.pem   #搭建etcd集群时生成的客户端证书
    keyFile: /etc/kubernetes/pki/etcd/etcd-key.pem  #搭建etcd集群时生成的客户端密钥
imageRepository: registry.cn-hangzhou.aliyuncs.com/google_containers
kind: ClusterConfiguration
kubernetesVersion: "{{kubernetes_version}}"
controlPlaneEndpoint: {{vip}}:8443  # vip地址
networking:
  dnsDomain: cluster.local
  podSubnet: {{pod_cidr}} 
  serviceSubnet: "{{service_cluster_ip_range}}"
scheduler: {}
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
mode: "{{kube_proxy_mode}}"

